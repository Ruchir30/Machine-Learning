def id3(data, attributes):
    labels = [r[-1] for r in data]
    return labels[0] if len(set(labels)) == 1 else attributes[0] if len(data) == 0 else {v: id3([r for r in data if r[0] == v], attributes[1:]) for v in set([r[0] for r in data])}

attributes = ["Size", "Cost"]
mapping = {"Small": "Hatchback", "Medium": "Hatchback", "Compact SUV": "Compact SUV", "Big": "SUV", "High": "SUV", "Low": "Hatchback"}

data = []

for _ in range(int(input("Enter number of records: "))):
    size, cost = input("Enter Size, Cost: ").split(",")
    data.append([size, cost, mapping.get((size, cost), "Unknown")])

tree = id3(data, attributes)
print("\nDecision Tree:", tree)

def predict(tree, attributes, user_input):
    if not isinstance(tree, dict):
        return tree
    attr = next(iter(tree))
    return predict(tree[attr].get(user_input[attributes.index(attr)], "Unknown"), attributes, user_input)

user_input = input("\n Enter Size, Cost: ").split(",")
print("\n Predicted Car Type:", predict(tree, attributes, user_input))
